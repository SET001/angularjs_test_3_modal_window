// Generated by CoffeeScript 1.6.3
(function() {
  var Modal;

  Modal = angular.module('TestModal', []);

  Modal.provider('TestModal', function() {
    return {
      $get: function($rootScope, $http, $document, $q) {
        return {
          settings: {
            title: '',
            text: '',
            buttons: []
          },
          load_template: function(url) {
            var _this = this;
            return $http.get(url).then(function(response) {
              return response.data;
            });
          },
          get_content: function() {
            var button, buttons, _i, _len, _ref;
            if (this.settings.templateUrl) {
              return this.load_template(this.settings.templateUrl);
            } else {
              buttons = '';
              if (this.settings.buttons.length > 0) {
                _ref = this.settings.buttons;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  button = _ref[_i];
                  buttons += '<a class="btn btn-primary" href="">' + button.label + '</a>';
                }
              }
              return '<div class="modal-dialog dialog-content">\
          <div class="modal-header">\
            <h3 class="modal-title">' + this.settings.title + '</h3>\
          </div>\
          <div class="modal-body">' + this.settings.text + '</div>\
          <div class="modal-footer">' + buttons + '</div>\
        </div>';
            }
          },
          close: function() {
            return $('#test-dialog').remove();
          },
          open: function(settings) {
            var _this = this;
            if (settings == null) {
              settings = {};
            }
            settings = angular.extend(this.settings, settings);
            $q.when(this.get_content()).then(function(content) {
              var base, dialog, scope;
              dialog = angular.element('<div id="test-dialog">\
          <div class="dialog-shadow"></div>' + content + '\
          </div>\
        </div>');
              if (!_this.settings.templateUrl) {
                $(dialog).find('.modal-footer .btn').each(function(i, button) {
                  return $(button).click(function() {
                    _this.settings.buttons[i].callback.call(_this);
                    return false;
                  });
                });
              }
              scope = $rootScope.$new();
              base = $document.find('body');
              return base.append(dialog);
            });
            return false;
          },
          openAlert: function(text, title) {
            if (title == null) {
              title = 'Atention';
            }
            return this.open({
              title: title,
              text: text,
              buttons: [
                {
                  label: 'ok',
                  callback: function() {
                    return this.close();
                  }
                }
              ]
            });
          },
          openConfirm: function(text) {
            var res;
            res = $q.defer();
            this.open({
              text: text,
              buttons: [
                {
                  label: 'yes',
                  callback: function() {
                    res.resolve();
                    return this.close();
                  }
                }, {
                  label: 'no',
                  callback: function() {
                    res.reject();
                    return this.close();
                  }
                }
              ]
            });
            return res.promise;
          }
        };
      }
    };
  });

}).call(this);
